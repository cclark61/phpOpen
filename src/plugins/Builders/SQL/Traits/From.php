<?php
//**************************************************************************************
//**************************************************************************************
/**
 * SQL From Trait
 *
 * @package		phpOpenFW
 * @author 		Christian J. Clark
 * @copyright	Copyright (c) Christian J. Clark
 * @license		https://mit-license.org
 **/
//**************************************************************************************
//**************************************************************************************

namespace phpOpenFW\Builders\SQL\Traits;

//**************************************************************************************
/**
 * SQL From Trait
 */
//**************************************************************************************
trait From
{
    //=========================================================================
	// Trait Memebers
    //=========================================================================
	protected $from = [];

    //=========================================================================
    //=========================================================================
	// From Clause Method
    //=========================================================================
    //=========================================================================
	public function From($from)
	{
        self::AddItemCSC($this->from, $from);
    	return $this;
	}

    //=========================================================================
    //=========================================================================
	// Raw From Clause Method
    //=========================================================================
    //=========================================================================
	public function FromRaw($from)
	{
        self::AddItem($this->from, $from);
    	return $this;
	}

    //##################################################################################
    //##################################################################################
    //##################################################################################
    // Protected / Internal Methods
    //##################################################################################
    //##################################################################################
    //##################################################################################

    //=========================================================================
    //=========================================================================
    // Format From Method
    //=========================================================================
    //=========================================================================
    protected function FormatFrom()
    {
        $clause = '';
        foreach ($this->from as $from) {
            if (is_array($from)) {
                if ($from[0] == 'join') {
                    $clause .= "\n  " . $from[1];
                }
            }
            else {
                if ($clause) {
                    $clause .= ',';
                }
                $clause .= "\n  " . $from;
            }
        }
        return "FROM" . $clause;
    }

}
