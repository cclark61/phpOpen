<?php
//**************************************************************************************
//**************************************************************************************
/**
 * SQL Core Class
 *
 * @package		phpOpenFW
 * @author 		Christian J. Clark
 * @copyright	Copyright (c) Christian J. Clark
 * @license		https://mit-license.org
 **/
//**************************************************************************************
//**************************************************************************************

namespace phpOpenFW\Builders\SQL;

//**************************************************************************************
/**
 * SQL Core Class
 */
//**************************************************************************************
abstract class Core
{

    //=========================================================================
	// Class Memebers
    //=========================================================================
	protected $opts = [];
    protected $sql_type = false;
	protected $db_type = 'mysql';
	protected $fields = [];
	protected $from = [];
	protected $where = [];
	protected $group_by = false;
	protected $having = [];
	protected $order_by = false;
	protected $limit = false;

    //=========================================================================
    //=========================================================================
    // Constructor Method
    //=========================================================================
    //=========================================================================
    public function __construct() {}

    //=========================================================================
    //=========================================================================
    // Get Instance Method
    //=========================================================================
    //=========================================================================
    public static function Instance()
    {
        return new static();
    }

    //=========================================================================
    //=========================================================================
    // To String Method
    //=========================================================================
    //=========================================================================
    public function __toString()
    {
		return $this->GetSQL();
	}

    //=========================================================================
    //=========================================================================
    // Set Option Method
    //=========================================================================
    //=========================================================================
    public function SetOpt($key, $val)
    {
	    if ($key == '') { return false; }
	    $this->opts[$key] = $val;
    }

    //=========================================================================
    //=========================================================================
    // Get Option Method
    //=========================================================================
    //=========================================================================
    public function GetOpt($key)
    {
	    if ($key == '') { return false; }
	    if (isset($this->opts[$key])) {
		    return $this->opts[$key];
	    }
	    return false;
    }

    //=========================================================================
    //=========================================================================
    // Get Method
    //=========================================================================
    //=========================================================================
    public function GetSQL()
    {
		trigger_error('The GetSQL() method has not been implemented.');
		return false;
	}

    //=========================================================================
    //=========================================================================
    // Execute Method
    //=========================================================================
    //=========================================================================
    public function Execute()
    {
		trigger_error('The Execute() method has not been implemented.');
		return false;
	}

    //=========================================================================
    //=========================================================================
	// Select Clause Method
    //=========================================================================
    //=========================================================================
	public function Fields($fields)
	{
		if (is_null($fields)) {
			$this->fields = [];
		}
		else {
			if (is_array($fields)) {
				$this->fields = array_merge($this->fields, $fields);
			}
			else {
				$this->fields[] = $fields;
			}
		}
		return $this;
	}

    //=========================================================================
    //=========================================================================
	// From Clause Method
    //=========================================================================
    //=========================================================================
	public function From($from)
	{
		if (is_null($from)) {
			$this->from = [];
		}
		else {
			if (is_array($from)) {
				$this->from = array_merge($this->from, $from);
			}
			else {
				$this->from[] = $from;
			}
		}
		return $this;
	}

    //=========================================================================
    //=========================================================================
	// Where Clause Method
    //=========================================================================
    //=========================================================================
	public function Where($where)
	{

	}

    //=========================================================================
    //=========================================================================
	// Format Group By Clause Method
    //=========================================================================
    //=========================================================================
	public function GroupBy($group_by)
	{
		if (is_null($group_by)) {
			$this->group_by = false;
			return $this;
		}
		if (is_array($group_by)) {
			$group_by = implode(', ', $group_by);
		}
		$this->group_by = 'GROUP BY ' . $group_by;
		return $this;
	}

    //=========================================================================
    //=========================================================================
	// Format Order By Clause Method
    //=========================================================================
    //=========================================================================
	public function OrderBy($order_by)
	{
		if (is_null($order_by)) {
			$this->order_by = false;
			return $this;
		}
		if (is_array($order_by)) {
			$order_by = implode(', ', $order_by);
		}
		$this->order_by = 'ORDER BY ' . $order_by;
		return $this;
	}

    //=========================================================================
    //=========================================================================
	// Format Limit Clause Method
    //=========================================================================
    //=========================================================================
	public function Limit($limit, &$params, $args=false)
	{
		if (is_null($limit)) {
			$this->limit = false;
			return this;
		}

		//==================================================================
		// Parameters?
		//==================================================================
		if (!is_array($params)) {
			$params = ($this->db_type == 'mysql') ? (['']) : ([]);
		}

		//==================================================================
		// Build Limit Clause
		//==================================================================
		if ($this->db_type == 'mysql') {
			$params[0] .= 'i';
		}
		$params[] = $limit;
		$this->limit = 'LIMIT ?';

		//==================================================================
		// Return Current Object
		//==================================================================
		return $this;
	}

    //=========================================================================
    //=========================================================================
	// Format Having Clause Method
    //=========================================================================
    //=========================================================================
	public function Having($condition)
	{

	}

}
