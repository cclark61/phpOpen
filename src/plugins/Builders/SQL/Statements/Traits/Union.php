<?php
//**************************************************************************************
//**************************************************************************************
/**
 * SQL Union Trait
 *
 * @package		phpOpenFW
 * @author 		Christian J. Clark
 * @copyright	Copyright (c) Christian J. Clark
 * @license		https://mit-license.org
 **/
//**************************************************************************************
//**************************************************************************************

namespace phpOpenFW\Builders\SQL\Statements\Traits;

//**************************************************************************************
/**
 * SQL Union Trait
 */
//**************************************************************************************
trait Union
{
    //=========================================================================
	// Trait Memebers
    //=========================================================================
	protected $unions = [];

    //=========================================================================
    //=========================================================================
	// Union Clause Method
    //=========================================================================
    //=========================================================================
	public function Union($union)
	{
        $this->unions[] = ['union', $union];
    	return $this;
	}

    //=========================================================================
    //=========================================================================
	// Union All Clause Method
    //=========================================================================
    //=========================================================================
	public function UnionAll($union)
	{
        $this->unions[] = ['union all', $union];
    	return $this;
	}

    //##################################################################################
    //##################################################################################
    //##################################################################################
    // Protected / Internal Methods
    //##################################################################################
    //##################################################################################
    //##################################################################################

    //=========================================================================
    //=========================================================================
    // Format Unions Method
    //=========================================================================
    //=========================================================================
    protected function FormatUnions()
    {
        $clause = '';
        foreach ($this->unions as $union) {
            if ($union[0] == 'union all') {
                $clause .= "\nUNION ALL\n\n{$union[1]}";
            }
            else {
                $clause .= "\nUNION\n\n{$union[1]}";
            }
            
        }
        return $clause;
    }

}
