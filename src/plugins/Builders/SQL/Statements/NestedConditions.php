<?php
//**************************************************************************************
//**************************************************************************************
/**
 * SQL Nested Conditions Class
 *
 * @package		phpOpenFW
 * @author 		Christian J. Clark
 * @copyright	Copyright (c) Christian J. Clark
 * @license		https://mit-license.org
 **/
//**************************************************************************************
//**************************************************************************************

namespace phpOpenFW\Builders\SQL\Statements;

//**************************************************************************************
/**
 * SQL Nested Conditions Class
 */
//**************************************************************************************
class NestedConditions
{
    //=========================================================================
    // Traits
    //=========================================================================
    use \phpOpenFW\Builders\SQL\Traits\Aux;
    use Traits\Where;

    //=========================================================================
	// Class Memebers
    //=========================================================================
	protected $parent_query;
	protected $db_type = false;
	protected $depth = 1;
	protected $bind_params = [];

    //=========================================================================
    //=========================================================================
    // Constructor Method
    //=========================================================================
    //=========================================================================
    public function __construct($parent_query, $depth)
    {
        if (gettype($parent_query) != 'object') {
            throw new \Exception("Parent query must be passed to nested conditions object.");
        }
        $this->parent_query = $parent_query;
        $this->db_type = $parent_query->GetDbType();
        $this->depth = $depth + 1;
        $this->bind_params = &$this->parent_query->GetBindParams();
    }

    //=========================================================================
    //=========================================================================
    // Get Database Type Method
    //=========================================================================
    //=========================================================================
    public function GetDbType()
    {
        return $this->db_type;
    }

    //=========================================================================
    //=========================================================================
    // Get Bind Parameters Method
    //=========================================================================
    //=========================================================================
    public function &GetBindParams()
    {
		return $this->bind_params;
	}

    //=========================================================================
    //=========================================================================
    // To String Method
    //=========================================================================
    //=========================================================================
    public function __toString()
    {
		return $this->FormatWhere();
	}

}
